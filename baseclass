package org.stepdefination;



import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Set;
import java.util.concurrent.TimeUnit;

import org.apache.commons.io.FileUtils;
import org.apache.poi.ss.usermodel.DateUtil;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.openqa.selenium.Alert;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.OutputType;
import org.openqa.selenium.TakesScreenshot;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.Select;

import com.google.common.collect.Table.Cell;

import io.github.bonigarcia.wdm.WebDriverManager;

public class baseClassss {

	static WebDriver driver;

	// BrowserLaunch

	public static WebDriver ChromeBrowser() {

		WebDriverManager.chromedriver().setup();
		WebDriver driver = new ChromeDriver();
		return driver;

	}

	// Maximize

	public static void maximize() {

		driver.manage().window().maximize();

	}

	// implicitlyTime

	public static void impTime(int sec) {
		driver.manage().timeouts().implicitlyWait(sec, TimeUnit.SECONDS);

	}

	// url Launch

	public static void urlLaunch(String url) {
		driver.get(url);
	}

	// CurrentUrl
	public static String currentUrl() {
		String currentUrl = driver.getCurrentUrl();
		return currentUrl;
	}

	// GetTitle

	public static String getTitle() {
		String Title = driver.getTitle();
		return Title;
	}

	// sendkeys
	public static void sendKeys(WebElement e, String s) {
		e.sendKeys(s);
	}

	// Quit
	public static void quit() {
		driver.quit();
	}

	// Action Click
	public static void actionClick(WebElement e) {
		Actions a = new Actions(driver);
		a.click(e).perform();
	}

	// MovetoElement
	public static void movetoElement(WebElement e) {
		Actions a = new Actions(driver);
		a.moveToElement(e).perform();
	}

	// drag and drop
	public static void dragAndDrop(WebElement move, WebElement to) {
		Actions a = new Actions(driver);
		a.dragAndDrop(move, to).perform();
	}

	// contextClick
	public static void contextClick(WebElement e) {
		Actions a = new Actions(driver);
		a.contextClick(e).perform();
	}

	// doubleClick
	public static void doubleClick(WebElement e) {
		Actions a = new Actions(driver);
		a.doubleClick(e).perform();

	}

	// alertAccept
	public static void alertAccept() {
		Alert alert = driver.switchTo().alert();
		alert.accept();

	}

	// alertDismiss
	private void alertDismiss() {
		Alert alert = driver.switchTo().alert();
		alert.dismiss();
	}

	// promptAlert
	public static void promptAlert(String a) {
		Alert alert = driver.switchTo().alert();
		alert.sendKeys(a);
		alert.accept();

	}

	// SelectbyIndex
	public static void selectByIndex(WebElement e, int index) {
		Select s = new Select(e);
		s.selectByIndex(index);

	}

	// SelectbyValue
	public static void selectByValue(WebElement e, String v) {
		Select s = new Select(e);
		s.selectByValue(v);

	}

	// SelectbyVisibleText
	public static void selectByVisibleText(WebElement e, String t) {
		Select s = new Select(e);
		s.selectByVisibleText(t);

	}

	// isMultiple
	public static boolean isMultiple(WebElement e) {
		Select s = new Select(e);
		boolean m = s.isMultiple();
		return m;
	}

	// getFirstSelectedOptions
	public static String getFirstSelectedOptions(WebElement e) {
		Select s = new Select(e);
		WebElement tt = s.getFirstSelectedOption();
		String text = tt.getText();
		return text;

	}

	// deSelectByIndex
	public static void deSelect(WebElement e, int index) {
		Select s = new Select(e);
		s.deselectByIndex(index);

	}

	// deSelectbyValue
	public static void deSelectByValue(WebElement e, String value) {
		Select s = new Select(e);
		s.deselectByValue(value);

	}

	// deselectbyVisibleText
	public static void deSelectByVisibleTest(WebElement e, String text) {
		Select s = new Select(e);
		s.deselectByVisibleText(text);
	}

	// deselectAll
	public static void deSelectAll(WebElement e) {
		Select s = new Select(e);
		s.deselectAll();
	}

	// screenShot
	public static void screenShot(String location, String filename) throws IOException {
		TakesScreenshot tk = (TakesScreenshot) driver;
		File from = tk.getScreenshotAs(OutputType.FILE);
		File to = new File("location" + filename + ".png");
		FileUtils.copyFile(from, to);

	}

	// javaScriptSetAttribute
	public static void jsSetAttribute(WebElement e, String username) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].setAttribute('Value', 'username')", e);
	}

	// javaScriptgetAttribute
	public static void jsgetAttribute(WebElement e, String password) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("return arguments[0].getAttribute('Value', 'password')", e);

	}

	// javascriptClick
	public static void jsClick(WebElement e) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].Click()", e);

	}

	// javascriptScrollDown
	public static void jsScrollDown(WebElement e) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].ScrollIntoView(true)", e);
	}

	// javascriptScrollUp
	public static void javascriptScrollUp(WebElement e) {
		JavascriptExecutor js = (JavascriptExecutor) driver;
		js.executeScript("arguments[0].ScrollIntoView(false)", e);
	}

	// FrameByIndex
	public static void frameByIndex(int index) {
		driver.switchTo().frame(index);
	}

	// FrameById or Name
	public static void frameByNameorId(String nameorid) {
		driver.switchTo().frame(nameorid);
	}

	// frameWebElement
	public static void frameWebElement(WebElement e) {
		driver.switchTo().frame(e);

	}

	// defaultContent
	public static void defaultContent() {
		driver.switchTo().defaultContent();
	}

	// parentFrame
	public static void parentframe() {
		driver.switchTo().parentFrame();
	}

	// WindowsHandlingUrlHandle
	public static void urlHandle(String url) {
		driver.switchTo().window(url);
	}

	// getWindowHandle
	public static String getWindowHandle(WebElement e) {
		return driver.getWindowHandle();

	}

	// getWindowHandles
	public static void getWindowHandles(int index) {
		Set<String> e = driver.getWindowHandles();
		List<String> li = new ArrayList<String>();
		li.addAll(e);
		driver.switchTo().window(li.get(index));

	}

	// AnotherwayofUrlLaunch
	public static void tolaunchUrl(String url) {
		driver.navigate().to(url);

	}

	// navigateback
	public static void back() {
		driver.navigate().back();

	}

	// navigateforward
	public static void forward() {
		driver.navigate().forward();
	}

	// navigaterefresh
	public static void refresh() {
		driver.navigate().refresh();
	}

	// isDisplayed
	public static boolean isDisplayed(WebElement e) {
		boolean aa = e.isDisplayed();
		return aa;
	}

	// isEnabled
	public static boolean isEnabled(WebElement e) {
		boolean aa = e.isEnabled();
		return aa;
	}

	// isSelected
	public static boolean isSelected(WebElement e) {
		boolean aa = e.isSelected();
		return aa;

	}
	
	// getExcelData
//	public static String getExcelData( String filename,String sheetname,int rowno,int cellno) throws IOException {
//			File loc=new File("C:\\Users\\MY PC\\eclipse-workspace\\Testmaven\\src\\test\\resources\\Screenshot\\Excel\\"+filename+".xlsx");
//			FileInputStream st= new FileInputStream(loc);
//		    Workbook w =new XSSFWorkbook(st);
//		    Sheet sheet = w.getSheet(sheetname);
//		    Row row = sheet.getRow(rowno);
//		    Cell cell = row.getCell(cellno);
//		    
//		    int type = cell.getCellType();
//		// type-----1 String
//		// type-----0 Number,Date
//			String value=null;
//			if (type==1) {
//				value = cell.getStringCellValue();     }
//			else {
//				if (DateUtil.isCellDateFormatted(cell)) {
//					value = new SimpleDateFormat("dd-MM-yyyy").format(cell.getDateCellValue());     }
//				else {
//					value = String.valueOf((long)cell.getNumericCellValue()); 
//				  }      
//			}
//			return value;
			
	}
	


